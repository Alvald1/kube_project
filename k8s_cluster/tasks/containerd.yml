- name: Download containerd archive
  get_url:
    url: "{{ containerd-archive }}"
    dest: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz

- name: Extract containerd archive
  unarchive:
    src: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes

- name: Remove containerd archive
  file:
    path: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    state: absent

- name: Create /etc/containerd directory
  file:
    path: /etc/containerd
    state: directory

- name: Generate default containerd config
  command: containerd config default
  register: containerd_config
  args:
    creates: /etc/containerd/config.toml

- name: Write containerd config to file
  copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml
  when: containerd_config.stdout is defined

- name: Download containerd systemd service file
  get_url:
    url: "{{ containerd-service }}"
    dest: /etc/systemd/system/containerd.service

- name: Download runc binary
  get_url:
    url: "{{ runc-binary }}"
    dest: /tmp/runc.amd64
    mode: '0755'

- name: Install runc binary
  copy:
    src: /tmp/runc.amd64
    dest: /usr/local/sbin/runc
    remote_src: yes
    mode: '0755'

- name: Remove runc binary
  file:
    path: /tmp/runc.amd64
    state: absent

- name: Download CNI plugins
  get_url:
    url: "{{ CNI-plugins }}"
    dest: /tmp/cni-plugins-linux-amd64-{{ CNI_version }}.tgz

- name: Create CNI bin directory
  file:
    path: /opt/cni/bin
    state: directory
    mode: '0755'

- name: Extract CNI plugins
  unarchive:
    src: /tmp/cni-plugins-linux-amd64-{{ CNI_version }}.tgz
    dest: /opt/cni/bin
    remote_src: yes

- name: Remove CNI plugins archive
  file:
    path: /tmp/cni-plugins-linux-amd64-{{ CNI_version }}.tgz
    state: absent

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Enable and start containerd
  systemd:
    name: containerd
    enabled: yes
    state: started

- name: Configure crictl
  copy:
    dest: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///var/run/containerd/containerd.sock
